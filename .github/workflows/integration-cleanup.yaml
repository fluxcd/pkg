name: integration-cleanup

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

permissions:
  id-token: write # Required for obtaining AWS OIDC federated credential.

env:
  GCRGC_VERSION: 0.4.8

jobs:
  gcp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tools/reaper
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: fluxcd/test-infra
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
          cache-dependency-path: ./tools/reaper/go.sum
      - name: Setup bin dir
        run: mkdir -p ~/.local/bin
      - name: Populate local env
        # This is needed to be able to use the global env as local env in cache
        # key.
        run: echo "GCRGC_VERSION=${GCRGC_VERSION}" >> $GITHUB_ENV
      - name: Cache gcrgc
        id: cache-gcrgc
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.local/bin/gcrgc
          key: gcrgc-${{ env.GCRGC_VERSION }}
      - name: Install gcrgc
        if: steps.cache-gcrgc.outputs.cache-hit != 'true'
        run: |
          cd $(mktemp -d)
          wget https://github.com/graillus/gcrgc/releases/download/v${GCRGC_VERSION}/gcrgc_${GCRGC_VERSION}_linux_amd64.tar.gz -O - | tar xz
          mv gcrgc ~/.local/bin/
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462 # v2.1.11
        with:
          credentials_json: '${{ secrets.CLEANUP_E2E_GOOGLE_CREDENTIALS }}'
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9 # v2.1.5
      - name: Run gcrgc
        # Cleanup all the GCR repositories in the project. They are not tracked
        # by terraform used to provision test infra and are left behind.
        run: gcrgc gcr.io/${{ vars.TF_VAR_gcp_project_id }} --retention-period 1h
      - name: Run reaper
        run: go run ./ -provider gcp -gcpproject ${{ vars.TF_VAR_gcp_project_id }} -retention-period 1h -tags 'ci=true' -delete

  azure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tools/reaper
    if: true
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: fluxcd/test-infra
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
          cache-dependency-path: ./tools/reaper/go.sum
      - name: Authenticate to Azure
        uses: Azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      - name: Run reaper
        run: go run ./ -provider azure -retention-period 1h -tags 'ci=true' -delete

  aws:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tools/reaper
    if: true
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: fluxcd/test-infra
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
          cache-dependency-path: ./tools/reaper/go.sum
      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.CLEANUP_E2E_AWS_ASSUME_ROLE_NAME }}
          role-session-name: cleanup_GH_Actions
          aws-region: ${{ vars.AWS_REGION }}
      - name: Run reaper
        run: go run ./ -provider aws-nuke -awsregions '${{ vars.AWS_REGION }},${{ vars.OCI_E2E_TF_VAR_cross_region }}' -retention-period 1h -tags 'ci=true' -delete
